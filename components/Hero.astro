---
import { Image } from "astro:assets";
---

<section class="relative min-h-screen flex items-center justify-center overflow-hidden bg-[#020817]">
  <div class="absolute inset-0 z-0">
    <div class="absolute inset-0 bg-gradient-radial from-purple-900/20 via-transparent to-transparent"></div>
    <canvas id="gradient-canvas" class="w-full h-full opacity-30"></canvas>
  </div>

  <div class="relative z-10 text-center">
    <div class="mb-16 floating">
      <div class="relative w-48 h-48 mx-auto mb-8">
        <div class="absolute inset-0 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full blur-3xl opacity-30 animate-pulse"></div>
        <div class="relative w-full h-full bg-gradient-to-r from-purple-600 to-pink-600 rounded-full overflow-hidden">
          <div class="absolute inset-0 bg-gradient-to-br from-black/30 to-transparent"></div>
          <!-- Add your logo or initials here -->
          <div class="flex items-center justify-center h-full text-4xl font-bold">NB</div>
        </div>
      </div>

      <h1 class="text-5xl md:text-7xl font-bold mb-4 bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-pink-600">
        Neal B
      </h1>
      <p class="text-xl md:text-2xl text-gray-400">
        Creative Developer & Digital Artist
      </p>
    </div>

    <div class="flex flex-wrap gap-6 justify-center">
      <a 
        href="#work" 
        class="group relative px-8 py-4 bg-white/5 backdrop-blur-sm rounded-full overflow-hidden transition-all hover:scale-105"
      >
        <div class="absolute inset-0 bg-gradient-to-r from-purple-600 to-pink-600 opacity-0 group-hover:opacity-100 transition-opacity"></div>
        <span class="relative font-semibold">View My Work</span>
      </a>
      <a 
        href="#contact"
        class="group relative px-8 py-4 bg-white/5 backdrop-blur-sm rounded-full overflow-hidden transition-all hover:scale-105"
      >
        <div class="absolute inset-0 bg-gradient-to-r from-purple-600/50 to-pink-600/50 opacity-0 group-hover:opacity-100 transition-opacity"></div>
        <span class="relative font-semibold">Get in Touch</span>
      </a>
    </div>
  </div>

  <div class="absolute bottom-12 left-1/2 -translate-x-1/2 animate-bounce">
    <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
    </svg>
  </div>
</section>

<script>
  // Enhanced particle animation
  class Gradient {
    constructor() {
      this.canvas = document.querySelector("#gradient-canvas");
      this.ctx = this.canvas.getContext("2d");
      this.dimensions = { width: 0, height: 0 };
      this.particles = [];
      this.numberOfParticles = 100; // Increased number of particles
      this.resize();
      this.createParticles();
      this.animate();
      
      window.addEventListener("resize", this.resize.bind(this));
    }

    resize() {
      this.dimensions.width = window.innerWidth;
      this.dimensions.height = window.innerHeight;
      this.canvas.width = this.dimensions.width;
      this.canvas.height = this.dimensions.height;
    }

    createParticles() {
      for (let i = 0; i < this.numberOfParticles; i++) {
        this.particles.push({
          x: Math.random() * this.dimensions.width,
          y: Math.random() * this.dimensions.height,
          radius: Math.random() * 1.5 + 0.5,
          vx: Math.random() * 0.5 - 0.25,
          vy: Math.random() * 0.5 - 0.25,
          hue: Math.random() * 60 + 240,
        });
      }
    }

    animate() {
      this.ctx.clearRect(0, 0, this.dimensions.width, this.dimensions.height);
      
      this.particles.forEach(particle => {
        particle.x += particle.vx;
        particle.y += particle.vy;
        
        if (particle.x < 0 || particle.x > this.dimensions.width) particle.vx *= -1;
        if (particle.y < 0 || particle.y > this.dimensions.height) particle.vy *= -1;
        
        this.ctx.beginPath();
        this.ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);
        this.ctx.fillStyle = `hsla(${particle.hue}, 70%, 50%, 0.3)`;
        this.ctx.fill();
      });
      
      requestAnimationFrame(this.animate.bind(this));
    }
  }

  window.addEventListener("load", () => {
    new Gradient();
  });
</script>

<style>
  .floating {
    animation: float 6s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-20px); }
  }
</style>
